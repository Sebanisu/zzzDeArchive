; Uncomment one of following lines, if you haven't checked "Add IDP include path to ISPPBuiltins.iss" option during IDP installation:
#pragma include __INCLUDE__ + ";" + ReadReg(HKLM, "Software\Mitrich Software\Inno Download Plugin", "InstallDir")
#pragma include __INCLUDE__ + ";" + "c:\lib\InnoDownloadPlugin"

#include <idp.iss>
; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Lunatic Pandora - Remastered"
#define MyAppVersion "1.0"
#define MyAppPublisher "MCINDUS"
#define MyAppURL "http://mcindusmods.pcriot.com"
#define MyAppExeName "zzzDeArchive.exe"
#define Main "main.zzz"
#define Other "other.zzz"
; see files down below  uncomment line for other if you have other.zzz mods etc...

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)

UsePreviousAppDir=no
AppId={{5872D30A-7988-4F4E-934E-6EDCEDA14222}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}  
CreateAppDir=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=D:\zzzDeArchive\inno
OutputBaseFilename=LunaticPandora-Remastered_v1-0 
Compression=lzma
SolidCompression=yes
WizardStyle=modern     
Uninstallable=no
DirExistsWarning=no
DefaultDirName={code:GetExistingInstallPath}

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\System.ValueTuple.xml"; DestDir: "{tmp}"; Flags: ignoreversion
Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\zzz.dll"; DestDir: "{tmp}"; Flags: ignoreversion
Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\zzz.pdb"; DestDir: "{tmp}"; Flags: ignoreversion
Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\zzzDeArchive.exe"; DestDir: "{tmp}"; Flags: ignoreversion
Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\zzzDeArchive.exe.config"; DestDir: "{tmp}"; Flags: ignoreversion
Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\zzzDeArchive.pdb"; DestDir: "{tmp}"; Flags: ignoreversion
Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\IN\main\*"; DestDir: "{tmp}\IN\main\"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\IN\other\*"; DestDir: "{tmp}\IN\other\"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\OUT"; DestDir: "{tmp}"; Flags: ignoreversion recursesubdirs createallsubdirs
;Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\foldermerge.bat"; DestDir: "{tmp}"; Flags: ignoreversion
Source: "D:\zzzDeArchive\zzzDeArchive\bin\Release\System.ValueTuple.dll"; DestDir: "{tmp}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Code]
function GetExistingInstallPath(Param: String):String;
var
  strExistingInstallPath:String ;
  strKey:String;
  strVal:String;
begin
  Result:='C:\Program Files (x86)\Steam\steamapps\common\FINAL FANTASY VIII Remastered'
  strKey:='SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 1026680'
  strVal:='InstallLocation'
  if RegQueryStringValue(HKLM64,strKey ,strVal, strExistingInstallPath) then begin
    Result:= strExistingInstallPath;
  end else if RegQueryStringValue(HKLM, strKey, strVal, strExistingInstallPath) then begin
    Result:= strExistingInstallPath;  
  end else if RegQueryStringValue(HKEY_LOCAL_MACHINE, strKey,strVal, strExistingInstallPath) then
    Result:= strExistingInstallPath;
end;

function Framework462IsNotInstalled(): Boolean;
var
  bSuccess: Boolean;
  regVersion: Cardinal;
  strKey:String; 
  strVal:String;
  intVal:Integer;
begin
  Result := True;
  strKey:='Software\Microsoft\NET Framework Setup\NDP\v4\Full';   
  strVal:='Release';
  intVal:=394802;

  bSuccess := RegQueryDWordValue(HKLM, strKey, strVal, regVersion);
  if (False = bSuccess) then begin
    bSuccess := RegQueryDWordValue(HKEY_LOCAL_MACHINE, strKey, strVal, regVersion);
  end;
  if (False = bSuccess) then begin
    bSuccess := RegQueryDWordValue(HKLM64, strKey, strVal, regVersion);
  end;
  if (True = bSuccess) and (regVersion >= intVal) then begin
    Result := False;
  end;
end;

procedure InitializeWizard;
begin
  if Framework462IsNotInstalled() then
  begin
    idpAddFile('https://go.microsoft.com/fwlink/?LinkId=780597', ExpandConstant('{tmp}\NetFrameworkInstaller.exe'));
    idpDownloadAfter(wpReady);
  end;
end;

procedure InstallFramework;
var
  StatusText: string;
  ResultCode: Integer;
begin
  StatusText := WizardForm.StatusLabel.Caption;
  WizardForm.StatusLabel.Caption := 'Installing .NET Framework 4.6.2. This might take a few minutes...';
  WizardForm.ProgressGauge.Style := npbstMarquee;
  try
    if not Exec(ExpandConstant('{tmp}\NetFrameworkInstaller.exe'), '/passive /norestart', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then
    begin
      MsgBox('.NET installation failed with code: ' + IntToStr(ResultCode) + '.', mbError, MB_OK);
    end;
  finally
    WizardForm.StatusLabel.Caption := StatusText;
    WizardForm.ProgressGauge.Style := npbstNormal;
DeleteFile(ExpandConstant('{tmp}\NetFrameworkInstaller.exe'));
  end;
end;

procedure MergeZZZ;
var
  StatusText: String;
  ResultCode: Integer;
  strEXE: String;
  strMain: String;
  strOther: String;
begin
  StatusText := WizardForm.StatusLabel.Caption;
  WizardForm.StatusLabel.Caption := 'Merging mods...';
  WizardForm.ProgressGauge.Style := npbstMarquee;
  strEXE:=ExpandConstant('{#MyAppExeName}');
  strMain:=ExpandConstant('{#Main}');
  strOther:=ExpandConstant('{#Other}');
  try
    if not Exec('cmd.exe',ExpandConstant('/C '+strEXE+' -foldermerge "{app}\'+strMain+'" "{app}\'+strOther+'" -skipwarning'), ExpandConstant('{tmp}'), SW_SHOW, ewWaitUntilTerminated, ResultCode) then
    begin
      MsgBox('Merging mods failed with code: ' + IntToStr(ResultCode) + '.', mbError, MB_OK);
    end
    else begin
    
    WizardForm.StatusLabel.Caption := 'Merging mods Complete... Copying Done files...';
    if FileExists(ExpandConstant('{tmp}\OUT\'+strMain)) and not FileCopy( ExpandConstant('{tmp}\OUT\'+strMain), ExpandConstant('{app}\'+strMain),False) then
      begin     
        MsgBox('Copy of main.zzz failed', mbError, MB_OK);
      end;
    if FileExists(ExpandConstant('{tmp}\OUT\'+strOther)) and not FileCopy( ExpandConstant('{tmp}\OUT\'+strOther), ExpandConstant('{app}\'+strOther),False) then
      begin
        MsgBox('Copy of other.zzz failed', mbError, MB_OK);
      end;
    end;
    //if not Exec('cmd.exe', '/K '+strEXE+'" -foldermerge "{app}\'+strMain+'" "{app}\'+strOther+'"', '{tmp}\', SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode) then
    //begin
    //  MsgBox('.NET installation failed with code: ' + IntToStr(ResultCode) + '.', mbError, MB_OK);
    //end;
  finally
    WizardForm.StatusLabel.Caption := StatusText;
    WizardForm.ProgressGauge.Style := npbstNormal;
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  case CurStep of
    ssPostInstall:
      begin
        if Framework462IsNotInstalled() then
        begin
          InstallFramework();
        end;
        MergeZZZ();
      end;
  end;
end;


